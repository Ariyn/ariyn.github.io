<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>osx on this.isMin.uk</title>
    <link>https://ariyn.github.io/tags/osx/</link>
    <description>Recent content in osx on this.isMin.uk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ariyn.github.io/tags/osx/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>맥에서 swift로 window들의 정보를 가져오는 방법</title>
      <link>https://ariyn.github.io/posts/epmnjjhnk/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ariyn.github.io/posts/epmnjjhnk/</guid>
      <description>swift&amp;lt;/br&amp;gt;import Cocoa&amp;lt;/br&amp;gt;import Quartz&amp;lt;/br&amp;gt;&amp;lt;/br&amp;gt;let options:CGWindowListOption = CGWindowListOption(arrayLiteral: CGWindowListOption.excludeDesktopElements, CGWindowListOption.optionOnScreenOnly)&amp;lt;/br&amp;gt;let relativeToWindow: CGWindowID = kCGNullWindowID&amp;lt;/br&amp;gt;&amp;lt;/br&amp;gt;let infos = CGWindowListCopyWindowInfo(options, relativeToWindow)&amp;lt;/br&amp;gt;&amp;lt;/br&amp;gt;struct WindowData:Codable {&amp;lt;/br&amp;gt; let processName: String&amp;lt;/br&amp;gt; let windowName: String&amp;lt;/br&amp;gt; let x: Int&amp;lt;/br&amp;gt; let y: Int&amp;lt;/br&amp;gt; let width: Int&amp;lt;/br&amp;gt; let height: Int&amp;lt;/br&amp;gt;}&amp;lt;/br&amp;gt;var collectedInfo: [WindowData] = []&amp;lt;/br&amp;gt;for info in infos as! [NSDictionary] {&amp;lt;/br&amp;gt; let bound:NSDictionary = info[&amp;quot;kCGWindowBounds&amp;quot;] as! NSDictionary&amp;lt;/br&amp;gt; let processName:String = info[&amp;quot;kCGWindowOwnerName&amp;quot;] as? String ?? &amp;quot;&amp;quot;&amp;lt;/br&amp;gt; let windowName:String = info[&amp;quot;kCGWindowName&amp;quot;] as? String ?? &amp;quot;&amp;quot;&amp;lt;/br&amp;gt;&amp;lt;/br&amp;gt; collectedInfo.append(WindowData(&amp;lt;/br&amp;gt; processName: processName.</description>
    </item>
    
  </channel>
</rss>
