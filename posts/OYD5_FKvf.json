{"ParentUid":"OYD5_FKvf","Uid":"OYD5_FKvf","Data":"trait은 동작을 공유할 수 있게 해준다 #TIL #rust","Order":0,"IsRoot":true,"Children":[{"ParentUid":"OYD5_FKvf","Uid":"Ngy_Q5Kyb","Data":"아무래도 Generic Type T라고만 받으면 문제가 생길 수 있다보니, trait을 만든 것 같다","Order":0,"IsRoot":false,"Children":[],"Images":null,"CreateTime":"1970-01-01T09:00:00+09:00","EditTime":"1970-01-01T09:00:00+09:00"},{"ParentUid":"OYD5_FKvf","Uid":"5gmDBf6Ld","Data":"함수 내부에 사용되는 동작들에 대해, 명시적으로 동작함을 가르쳐 줘야 한다","Order":1,"IsRoot":false,"Children":[{"ParentUid":"5gmDBf6Ld","Uid":"ZhsKxMkD2","Data":"ducktyping과 interface 형식과 비슷하다","Order":0,"IsRoot":false,"Children":[],"Images":null,"CreateTime":"1970-01-01T09:00:00+09:00","EditTime":"1970-01-01T09:00:00+09:00"}],"Images":null,"CreateTime":"1970-01-01T09:00:00+09:00","EditTime":"1970-01-01T09:00:00+09:00"},{"ParentUid":"OYD5_FKvf","Uid":"B486pQAb4","Data":"scope에 따라서 trait 구현이 가능할 수도, 아닐수도 있다","Order":2,"IsRoot":false,"Children":[{"ParentUid":"B486pQAb4","Uid":"rN9eDIhsb","Data":"외부의 타입에 대해 외부의 trait을 구현할 수는 없다 (golang에서 interface를 외부에서 구현할 수 없는것 처럼)","Order":0,"IsRoot":false,"Children":[],"Images":null,"CreateTime":"1970-01-01T09:00:00+09:00","EditTime":"1970-01-01T09:00:00+09:00"},{"ParentUid":"B486pQAb4","Uid":"7RoXySuvJ","Data":"trait 혹은 타입중 하나가 내부에서 정의되었다면 문제 없다","Order":1,"IsRoot":false,"Children":[],"Images":null,"CreateTime":"1970-01-01T09:00:00+09:00","EditTime":"1970-01-01T09:00:00+09:00"},{"ParentUid":"B486pQAb4","Uid":"oOUoYbQYy","Data":"이는 타입이론에서 `고아규칙`이라 부르는 것과 관련 있다고 한다","Order":2,"IsRoot":false,"Children":[],"Images":null,"CreateTime":"1970-01-01T09:00:00+09:00","EditTime":"1970-01-01T09:00:00+09:00"}],"Images":null,"CreateTime":"1970-01-01T09:00:00+09:00","EditTime":"1970-01-01T09:00:00+09:00"}],"Images":[],"CreateTime":"2022-03-31T23:39:33+09:00","EditTime":"1970-01-01T09:00:00+09:00"}